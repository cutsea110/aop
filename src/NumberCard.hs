{-# LANGUAGE NPlusKPatterns #-}
module NumberCard where

import Data.Monoid (Sum(..))

------------------------------------------------------
-- | 2024年度 豊島岡女子中学校 第一回入試問題 第4問
------------------------------------------------------
-- | 3種類のカード [1], [2], [13] がそれぞれたくさんあります。
--   これらのカードを [2] のカードが連続しないように並べて整数を作ります。
--   例えば,
--   1桁の整数は [1], [2] の 2 通り。
--   2桁の整数は [1][1], [1][2], [2][1], [13] の 4 通り。
--   3桁の整数は [1][1][1], [1][1][2], [1][2][1], [1][13], [2][1][1], [2][1][2],
--   [2][13], [13][1], [13][2]の 9 通り作ることができます。
--   このとき, 次の各問に答えなさい。
--
--   (1) 4 桁の整数は何通り作ることができますか。
--   (2) 6 桁の整数は何通り作ることができますか。


-- | 3要素のリスト
--  1. カード [1]  はじまりの digit 文字列
--  2. カード [2]  はじまりの digit 文字列
--  3. カード [13] はじまりの digit 文字列
digits :: Int -> ([] String, ([] String, [] String, [] String))
digits = (map f [0..] !!)
  where
    f 0 = ([""], ([], [], []))
    f 1 = (["1", "2"], (["1"], ["2"], []))
    f n = (p1'<>p2'<>p13', (p1', p2', p13'))
      where
        (t1, (p1, _, p13)) = digits (n-1)
        (t2, _)            = digits (n-2)
        p1'  = map ("1"<>) t1
        p2'  = map ("2"<>) (p1<>p13)
        p13' = map ("13"<>) t2

digitCount :: Int -> (Sum Integer, (Sum Integer, Sum Integer, Sum Integer))
digitCount = (map d [0..] !!)
  where
    d 0 = (Sum 1, (Sum 0, Sum 0, Sum 0))
    d 1 = (Sum 2, (Sum 1, Sum 1, Sum 0))
    d n = (p1'<>p2'<>p13', (p1', p2', p13'))
      where
        (t1, (p1, _, p13)) = digitCount (n-1)
        (t2, _)            = digitCount (n-2)
        p1' = t1
        p2' = p1<>p13
        p13' = t2
